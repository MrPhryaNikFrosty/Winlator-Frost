name: Build Turnip Driver

on:
  workflow_dispatch:
    inputs:
      mesa_version:
        description: "Mesa version to build (tag or branch)"
        required: true
        default: "mesa-26.0.0"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get clean && sudo apt-get update
          sudo apt-get install -y python3-mako python3-pip ninja-build python3-setuptools python3-wheel \
            libx11-dev libxext-dev libxdamage-dev libxfixes-dev libxcb-glx0-dev libxcb-dri2-0-dev \
            libxcb-dri3-dev libxcb-present-dev libxcb-sync-dev libxcb-randr0-dev libxcb-shape0-dev \
            libxcb-xfixes0-dev libxcb1-dev libxshmfence-dev libvulkan-dev libwayland-dev wayland-protocols \
            libexpat1-dev libdrm-dev llvm-dev libclang-dev clang pkg-config git
          python3 -m pip install --upgrade pip
          pip install --upgrade meson==1.5.0 mako

      - name: Clone Mesa
        run: |
          git clone https://gitlab.freedesktop.org/mesa/mesa.git
          cd mesa
          git fetch --tags
          git checkout ${{ github.event.inputs.mesa_version }} || git checkout main
          git submodule update --init --recursive

      - name: Apply Turnip Patches (optional)
        run: |
          cd mesa
          for patch in \
            9575886914d4a4ca09694c42e261f568ee8575d7 \
            d264c66f9950cb2331c22c21172a07520fb38c68 \
            96c4cb07b2a52124021c807f2c1ad4ab1f1cbf9c; do
            echo "Applying patch $patch..."
            git fetch https://gitlab.freedesktop.org/Pipetto-crypto/mesa.git $patch || true
            git cherry-pick $patch || echo "Skipping patch $patch (already applied or not compatible)"
          done

      - name: Build Mesa Turnip
        run: |
          cd mesa
          meson setup build/ \
            --prefix=/usr \
            -Dvulkan-drivers=freedreno \
            -Dgallium-drivers=freedreno,softpipe,llvmpipe \
            -Dllvm=enabled \
            -Dshared-llvm=true \
            -Dplatforms=x11,wayland \
            -Dbuildtype=release
          ninja -C build

          mkdir -p ../artifacts
          # Collect possible output .so paths for Mesa 25.xâ€“26.x+
          find build -name "*.so" -type f -exec cp {} ../artifacts/ \; || true

      - name: Upload Compiled Drivers
        uses: actions/upload-artifact@v4
        with:
          name: Mesa-${{ github.event.inputs.mesa_version }}-Turnip-Drivers
          path: artifacts/
