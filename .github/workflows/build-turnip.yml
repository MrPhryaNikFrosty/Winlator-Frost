name: Build Turnip Vulkan Driver for ARM64 (Winlator-Compatible)

on:
  workflow_dispatch:

jobs:
  build-turnip:
    runs-on: ubuntu-22.04

    steps:
      # --- Enable QEMU emulation for ARM64 ---
      - name: Set up QEMU for ARM64
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      # --- Prepare Environment (Host) ---
      - name: Prepare Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git curl ca-certificates python3 python3-pip python3-venv \
            build-essential binutils make perl flex bison byacc \
            pkg-config cmake ninja-build python3-mako python3-setuptools \
            python3-wheel python3-yaml glslang-tools libclc-dev llvm clang libclang-dev

          if pip install --help | grep -q break-system-packages; then
            pip install --break-system-packages --upgrade meson ninja
          else
            python3 -m venv ~/.venv
            . ~/.venv/bin/activate
            pip install --upgrade meson ninja
          fi

      # --- Clone Mesa Source ---
      - name: Clone Mesa Source
        run: |
          git clone --depth=1 https://gitlab.freedesktop.org/mesa/mesa.git
          cd mesa && git log -1

      # --- Build inside ARM64 container with full dependencies ---
      - name: Build Mesa Turnip (ARM64)
        run: |
          docker run --rm --platform linux/arm64 \
            -v ${{ github.workspace }}:/work \
            ubuntu:24.04 \
            bash -c "
              set -e
              export DEBIAN_FRONTEND=noninteractive
              apt-get update && apt-get install -y \
                build-essential binutils make perl git curl \
                python3 python3-pip python3-venv python3-mako python3-setuptools python3-wheel python3-yaml \
                pkg-config cmake ninja-build flex bison byacc \
                llvm clang libclang-dev libclc-dev \
                zlib1g-dev libdrm-dev libelf-dev libexpat1-dev libunwind-dev \
                libwayland-dev wayland-protocols libwayland-egl-backend-dev \
                libx11-dev libx11-xcb-dev libxext-dev libxdamage-dev libxfixes-dev \
                libxxf86vm-dev libxshmfence-dev \
                libxcb1-dev libxcb-glx0-dev libxcb-dri2-0-dev libxcb-dri3-dev \
                libxcb-present-dev libxcb-randr0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-shm0-dev && \
              python3 -m venv /opt/venv && \
              . /opt/venv/bin/activate && \
              pip install --upgrade meson ninja mako packaging pyyaml && \
              cd /work && \
              git clone --depth=1 https://github.com/KhronosGroup/SPIRV-Headers.git && \
              cp -r SPIRV-Headers/include/spirv /usr/include/ && \
              git clone --depth=1 https://github.com/KhronosGroup/SPIRV-Tools.git && \
                cd SPIRV-Tools && python3 utils/git-sync-deps && \
                mkdir build && cd build && \
                cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr \
                      -DSPIRV_SKIP_TESTS=ON .. && \
                make -j$(nproc) && make install && \
              cd /work && git clone --depth=1 https://github.com/KhronosGroup/glslang.git && \
                cd glslang && mkdir build && cd build && \
                cmake -DCMAKE_BUILD_TYPE=Release \
                      -DCMAKE_INSTALL_PREFIX=/usr \
                      -DENABLE_OPT=ON \
                      -DALLOW_EXTERNAL_SPIRV_TOOLS=ON \
                      -DSPIRV_TOOLS_INCLUDE_DIR=/usr/include/spirv-tools \
                      -DSPIRV_TOOLS_LIBRARY_DIR=/usr/lib .. || \
                  (echo 'Retrying glslang with ENABLE_OPT=OFF' && rm -rf * && \
                   cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_OPT=OFF -DCMAKE_INSTALL_PREFIX=/usr ..) && \
                make -j$(nproc) && make install && \
                which glslangValidator && glslangValidator --version || true && \
              cd /work/mesa && \
              . /opt/venv/bin/activate && \
              meson setup build/ \
                --prefix=/work/install \
                --libdir=lib \
                -Dplatforms=x11,wayland \
                -Dvulkan-drivers=freedreno \
                -Dgallium-drivers=freedreno \
                -Dllvm=enabled \
                -Dshared-llvm=true \
                -Dbuildtype=release && \
              ninja -C build && ninja -C build install
            "

      # --- Upload Compiled Turnip Vulkan Driver ---
      - name: Upload Turnip Vulkan Driver
        uses: actions/upload-artifact@v4
        with:
          name: Mesa-Turnip-ARM64
          path: install/lib/libvulkan_freedreno.so
