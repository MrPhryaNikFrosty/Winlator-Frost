name: Build Turnip Vulkan Driver for AArch64 (Winlator-Compatible)

on:
  workflow_dispatch:

jobs:
  build:
    name: Build Turnip (Mesa Freedreno) for AArch64
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Fix submodules with missing URL
        run: |
          if [ -f .gitmodules ]; then
            echo "Checking for broken submodules..."
            if ! grep -q "app/src/main/cpp/OpenXR-SDK" .gitmodules; then
              echo "Removing broken OpenXR-SDK submodule entry..."
              git rm --cached app/src/main/cpp/OpenXR-SDK || true
              rm -rf app/src/main/cpp/OpenXR-SDK || true
            fi
          fi

      - name: Install base dependencies
        run: |
          sudo dpkg --add-architecture arm64
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends \
            python3 python3-pip python3-setuptools python3-wheel \
            ninja-build cmake git pkg-config wget unzip \
            build-essential crossbuild-essential-arm64 \
            bison flex gettext \
            libx11-dev:arm64 libxext-dev:arm64 libxdamage-dev:arm64 libxfixes-dev:arm64 \
            libxcb-glx0-dev:arm64 libxcb-dri2-0-dev:arm64 libxcb-dri3-dev:arm64 \
            libxcb-present-dev:arm64 libxcb-sync-dev:arm64 libxshmfence-dev:arm64 \
            libxxf86vm-dev:arm64 libexpat1-dev:arm64 zlib1g-dev:arm64 \
            libdrm-dev:arm64 libwayland-dev:arm64 wayland-protocols \
            llvm llvm-dev clang libclang-dev libelf-dev:arm64 \
            spirv-tools

      - name: Upgrade Meson to latest
        run: |
          pip install --upgrade meson==1.9.1 Mako

      - name: Clone Mesa main branch
        run: |
          git clone --depth=1 https://gitlab.freedesktop.org/mesa/mesa.git
          cd mesa
          git submodule update --init --depth=1 --recursive

      - name: Configure Mesa build (AArch64 Turnip)
        working-directory: mesa
        run: |
          meson setup build \
            --prefix=/usr/local \
            --libdir=lib/aarch64-linux-gnu \
            --cross-file cross_file.txt \
            -Dgallium-drivers=freedreno,llvmpipe \
            -Dvulkan-drivers=freedreno \
            -Dplatforms=x11,wayland,android \
            -Dllvm=true -Dshared-llvm=true \
            -Dglx=dri -Dgles1=true -Dgles2=true -Dopengl=true \
            -Dbuildtype=release

      - name: Create cross-compilation file
        working-directory: mesa
        run: |
          cat <<EOF > cross_file.txt
          [binaries]
          c = '/usr/bin/aarch64-linux-gnu-gcc'
          cpp = '/usr/bin/aarch64-linux-gnu-g++'
          ar = '/usr/bin/aarch64-linux-gnu-ar'
          strip = '/usr/bin/aarch64-linux-gnu-strip'
          pkgconfig = '/usr/bin/pkg-config'
          [host_machine]
          system = 'linux'
          cpu_family = 'aarch64'
          cpu = 'aarch64'
          endian = 'little'
          EOF

      - name: Build Mesa Turnip driver
        working-directory: mesa
        run: |
          meson compile -C build
          mkdir -p ../artifacts
          find build -type f -name "libvulkan_freedreno.so" -exec cp {} ../artifacts/ \; || true
          find build -type f -name "libgallium*.so" -exec cp {} ../artifacts/ \; || true
          ls -lh ../artifacts || true

      - name: Upload Turnip build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mesa-turnip-libs
          path: artifacts/*.so
          if-no-files-found: warn

      - name: Upload build logs
        uses: actions/upload-artifact@v4
        with:
          name: mesa-turnip-logs
          path: |
            mesa/build/meson-logs/meson-log.txt
          if-no-files-found: ignore
