name: Build Turnip Vulkan Driver for ARM64 (Winlator-Compatible)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    name: üß© Build Turnip Vulkan (Mesa)
    steps:
      - name: üß∞ Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 1

      - name: üß© Prepare Clean Workspace
        run: |
          rm -rf mesa build glslang SPIRV-Tools SPIRV-Headers
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*

      - name: üß± Update Repositories (Stable Mirrors)
        run: |
          sudo sed -i 's|archive.ubuntu.com|mirror.init7.net|g' /etc/apt/sources.list
          sudo sed -i 's|security.ubuntu.com|mirror.init7.net|g' /etc/apt/sources.list
          sudo apt-get update -y

      - name: üì¶ Install All Mesa Build Dependencies
        run: |
          sudo dpkg --add-architecture arm64
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends \
            git cmake ninja-build meson python3 python3-pip python3-setuptools python3-wheel \
            pkg-config build-essential bison flex gettext gettext-base \
            llvm clang libclang-dev libexpat1-dev libzstd-dev libelf-dev \
            libwayland-dev wayland-protocols libx11-dev libxext-dev libxfixes-dev \
            libxcb1-dev libxcb-dri2-0-dev libxcb-dri3-dev libxcb-present-dev \
            libxshmfence-dev libxxf86vm-dev libdrm-dev libdrm-amdgpu1 libdrm2 \
            libgbm-dev libpciaccess-dev zlib1g-dev libunwind-dev \
            glslang-tools spirv-tools spirv-headers spirv-llvm-translator-dev \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu qemu-user-static

      - name: üß∞ Verify Dependency Installation
        run: |
          echo "==== Checking pkg-config availability ====" | tee mesa-deps-check.log
          pkg-config --list-all | tee -a mesa-deps-check.log
          echo "==== Checking Mesa critical dependencies ====" | tee -a mesa-deps-check.log
          for dep in libdrm gbm egl gl xcb-dri3 x11 xshmfence zstd elf expat llvm clang wayland-egl-backend; do
              echo "Checking for $dep..." | tee -a mesa-deps-check.log
              pkg-config --exists $dep && echo "$dep found ‚úÖ" | tee -a mesa-deps-check.log || echo "$dep MISSING ‚ùå" | tee -a mesa-deps-check.log
          done

      - name: üß© Build GLSLang (with SPIRV-Tools)
        run: |
          git clone --depth=1 https://github.com/KhronosGroup/glslang.git
          cd glslang
          git clone --depth=1 https://github.com/KhronosGroup/SPIRV-Tools External/spirv-tools
          git clone --depth=1 https://github.com/KhronosGroup/SPIRV-Headers External/spirv-tools/external/spirv-headers
          mkdir build && cd build
          cmake -G Ninja -DENABLE_OPT=ON -DALLOW_EXTERNAL_SPIRV_TOOLS=ON -DCMAKE_BUILD_TYPE=Release ..
          ninja -j$(nproc)
          sudo ninja install

      - name: üß± Clone Mesa Source
        run: |
          git clone --depth=1 https://gitlab.freedesktop.org/mesa/mesa.git mesa
          cd mesa
          echo "Mesa commit:"
          git rev-parse HEAD

      - name: ‚öôÔ∏è Setup Cross File for ARM64
        run: |
          cd mesa
          cat <<EOF > cross_file.txt
          [binaries]
          c = '/usr/bin/aarch64-linux-gnu-gcc'
          cpp = '/usr/bin/aarch64-linux-gnu-g++'
          ar = '/usr/bin/aarch64-linux-gnu-ar'
          strip = '/usr/bin/aarch64-linux-gnu-strip'
          pkgconfig = 'pkg-config'
          exe_wrapper = '/usr/bin/qemu-aarch64-static'

          [host_machine]
          system = 'linux'
          cpu_family = 'aarch64'
          cpu = 'armv8-a'
          endian = 'little'
          EOF

      - name: üèóÔ∏è Configure Mesa with Meson
        run: |
          cd mesa
          meson setup build/ \
            --cross-file cross_file.txt \
            -Dplatforms=x11,wayland \
            -Dvulkan-drivers=freedreno \
            -Dgallium-drivers=[] \
            -Dbuildtype=release \
            -Doptimization=3 \
            -Dglx=disabled -Degl=disabled -Dshared-glapi=disabled \
            -Dgles1=disabled -Dgles2=disabled -Dopengl=false -Dllvm=enabled -Dzstd=enabled -Dprefix=/usr/local

      - name: üî® Build Mesa
        run: |
          cd mesa
          ninja -C build -j$(nproc)
          mkdir -p ../artifacts
          cp -r build ../artifacts/mesa-build

      - name: üì¶ Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mesa-arm64-build
          path: artifacts/
