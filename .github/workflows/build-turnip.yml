name: Build Turnip Vulkan Driver for ARM64 (Winlator-Compatible)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fix APT mirrors to prevent 404 errors
        run: |
          sudo sed -i 's|http://.*archive.ubuntu.com|http://ports.ubuntu.com|g' /etc/apt/sources.list
          sudo sed -i 's|http://.*security.ubuntu.com|http://ports.ubuntu.com|g' /etc/apt/sources.list
          sudo apt-get clean
          sudo apt-get update

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git cmake ninja-build meson pkg-config \
            python3 python3-pip python3-setuptools python3-wheel \
            build-essential bison flex \
            libx11-dev libwayland-dev libxrandr-dev libxext-dev \
            libxdamage-dev libxfixes-dev libexpat1-dev libdrm-dev \
            libwayland-egl-backend-dev libxcb-glx0-dev libxcb-dri2-0-dev \
            libxcb-dri3-dev libxcb-present-dev libxcb-sync-dev \
            libxcb-randr0-dev libxcb-shm0-dev libxcb-xfixes0-dev \
            libx11-xcb-dev libvulkan-dev python3-mako \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu qemu-user-static

          pip install meson==1.4.1 mako

      - name: Clone Mesa repository
        run: |
          mkdir -p mesa
          cd mesa
          git clone --depth=1 https://gitlab.freedesktop.org/mesa/mesa.git .

      # -----------------------------
      # SPIRV-Tools setup and install
      # -----------------------------
      - name: Clone and build SPIRV-Tools
        run: |
          cd mesa
          git clone --depth=1 https://github.com/KhronosGroup/SPIRV-Tools.git
          cd SPIRV-Tools
          python3 utils/git-sync-deps
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DSPIRV_SKIP_TESTS=ON -DCMAKE_INSTALL_PREFIX=/usr/local .
          ninja
          sudo ninja install

      # -----------------------------
      # glslang build (with SPIRV-Tools)
      # -----------------------------
      - name: Clone and build glslang
        run: |
          cd mesa
          git clone --depth=1 https://github.com/KhronosGroup/glslang.git
          cd glslang
          cmake -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DENABLE_OPT=ON \
            -DALLOW_EXTERNAL_SPIRV_TOOLS=ON \
            -DSPIRV_TOOLS_INSTALL_DIR=/usr/local \
            -DCMAKE_PREFIX_PATH=/usr/local \
            -DCMAKE_INSTALL_PREFIX=/usr/local .
          ninja
          sudo ninja install

      # -----------------------------
      # Cross build setup for Mesa
      # -----------------------------
      - name: Create cross file for ARM64
        run: |
          cd mesa
          cat > cross_file.txt <<EOF
          [binaries]
          c = 'aarch64-linux-gnu-gcc'
          cpp = 'aarch64-linux-gnu-g++'
          ar = 'aarch64-linux-gnu-ar'
          strip = 'aarch64-linux-gnu-strip'
          pkg-config = 'pkg-config'

          [host_machine]
          system = 'linux'
          cpu_family = 'aarch64'
          cpu = 'armv8'
          endian = 'little'
          EOF

      - name: Configure Mesa (Turnip Vulkan)
        run: |
          cd mesa
          meson setup build \
            --prefix /usr \
            --libdir lib/aarch64-linux-gnu \
            -Dplatforms=x11,wayland \
            -Dvulkan-drivers=freedreno \
            -Dgallium-drivers= \
            -Dbuildtype=release \
            --cross-file cross_file.txt

      - name: Build Mesa (Turnip)
        run: |
          cd mesa/build
          ninja

      - name: Package artifacts
        run: |
          cd mesa
          mkdir -p artifacts
          cp -r build/_install/* artifacts/ || true
          tar czf mesa-turnip-arm64.tar.gz -C artifacts .

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mesa-turnip-arm64
          path: mesa/mesa-turnip-arm64.tar.gz
