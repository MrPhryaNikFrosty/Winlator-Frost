name: Build Mesa Turnip (ARM64)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # -------------------------
      # 1. Checkout Repo
      # -------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # -------------------------
      # 2. Prepare Host Environment
      # -------------------------
      - name: Prepare Environment (Host)
        run: |
          set -e
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends \
            git wget curl ca-certificates software-properties-common \
            python3 python3-pip python3-venv python3-yaml pkg-config \
            cmake ninja-build build-essential clang llvm \
            meson qemu-user-static binfmt-support \
            crossbuild-essential-arm64 gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
            libwayland-dev wayland-protocols wayland-scanner++ \
            libx11-dev libxext-dev libxdamage-dev libxfixes-dev \
            libxcb-glx0-dev libxcb-dri2-0-dev libxcb-dri3-dev libxcb-present-dev \
            libxcb-sync-dev libxshmfence-dev libxxf86vm-dev libvulkan-dev \
            libdrm-dev libexpat1-dev libelf-dev bison flex zlib1g-dev \
            spirv-tools
          python3 -m pip install --no-cache-dir meson mako pyyaml

      # -------------------------
      # 3. Clone Mesa
      # -------------------------
      - name: Clone Mesa source
        run: |
          set -e
          if [ ! -d "${{ github.workspace }}/mesa" ]; then
            git clone --depth=1 https://gitlab.freedesktop.org/mesa/mesa.git ${{ github.workspace }}/mesa
          else
            cd ${{ github.workspace }}/mesa
            git fetch origin main || true
          fi

      # -------------------------
      # 4. Build glslang from source
      # -------------------------
      - name: Build glslang (for SPIR-V tools)
        run: |
          set -e
          cd ${{ github.workspace }}
          if [ ! -d glslang ]; then
            git clone --depth=1 https://github.com/KhronosGroup/glslang.git
          fi
          cd glslang
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DENABLE_OPT=OFF .
          ninja
          sudo cp StandAlone/glslangValidator /usr/local/bin/

      # -------------------------
      # 5. Build Mesa Turnip (ARM64)
      # -------------------------
      - name: Build Mesa Turnip (ARM64)
        run: |
          set -e
          cd ${{ github.workspace }}/mesa

          # Ensure glslangValidator exists
          which glslangValidator || (echo "glslangValidator missing!" && exit 1)

          echo "ðŸ§© Creating ARM64 cross file..."
          cat > cross_file.txt <<'EOF'
          [binaries]
          c = 'aarch64-linux-gnu-gcc'
          cpp = 'aarch64-linux-gnu-g++'
          ar = 'aarch64-linux-gnu-ar'
          strip = 'aarch64-linux-gnu-strip'
          pkgconfig = 'pkg-config'
          exe_wrapper = 'qemu-aarch64-static'

          [host_machine]
          system = 'linux'
          cpu_family = 'aarch64'
          cpu = 'armv8'
          endian = 'little'
          EOF

          mkdir -p build && cd build
          meson setup --cross-file ../cross_file.txt \
            -Dplatforms=x11,wayland \
            -Dvulkan-drivers=freedreno \
            -Dgallium-drivers=[] \
            -Dbuildtype=release \
            -Doptimization=3 \
            -Dglx=disabled \
            -Degl=disabled \
            -Dshared-glapi=disabled \
            -Dgles1=disabled \
            -Dgles2=disabled \
            -Dopengl=false \
            -Dllvm=disabled \
            -Dprefix=/usr/local \
            ..
          ninja install

      # -------------------------
      # 6. Upload Compiled Artifacts
      # -------------------------
      - name: Upload Mesa artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mesa-turnip-arm64
          path: ${{ github.workspace }}/mesa/build
