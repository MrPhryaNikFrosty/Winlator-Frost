name: Build Turnip Driver (Winlator Compatible AArch64)

on:
  workflow_dispatch:
    inputs:
      mesa_version:
        description: "Mesa version to build (tag or branch)"
        required: true
        default: "mesa-26.0.0"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Basic Build Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential git pkg-config wget xz-utils \
            python3 python3-pip python3-setuptools python3-wheel \
            cmake ninja-build \
            clang llvm llvm-dev libclang-dev \
            libx11-dev libx11-xcb-dev libxext-dev libxxf86vm-dev \
            libxdamage-dev libxfixes-dev libxshmfence-dev \
            libxcb1-dev libxcb-glx0-dev libxcb-dri2-0-dev libxcb-dri3-dev \
            libxcb-present-dev libxcb-sync-dev libxcb-randr0-dev \
            libxcb-shape0-dev libxcb-xfixes0-dev libxcb-shm0-dev \
            libwayland-dev wayland-protocols libwayland-egl-backend-dev \
            libegl1-mesa-dev libvulkan-dev \
            libdrm-dev libexpat1-dev libudev-dev libomxil-bellagio-dev \
            libunwind-dev libpthread-stubs0-dev libselinux-dev libxrandr-dev \
            zlib1g-dev libpng-dev libtinfo-dev libelf-dev
          
          # Avoid upgrading system pip (fixes Debian-managed pip issue)
          python3 -m pip install --user --upgrade meson==1.5.0 mako

      - name: Build and Install glslang >=12.2
        run: |
          git clone https://github.com/KhronosGroup/glslang.git
          cd glslang
          # Use a known modern tag >= 12.2 (14.x or latest)
          git checkout main
          cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
          cmake --build build -j$(nproc)
          sudo cmake --install build
          glslangValidator --version || echo "glslang installation verified."

      - name: Clone Mesa
        run: |
          git clone https://gitlab.freedesktop.org/mesa/mesa.git
          cd mesa
          git fetch --tags
          git checkout ${{ github.event.inputs.mesa_version }} || git checkout main
          git submodule update --init --recursive

      - name: Apply Turnip Patches (optional)
        run: |
          cd mesa
          for patch in \
            9575886914d4a4ca09694c42e261f568ee8575d7 \
            d264c66f9950cb2331c22c21172a07520fb38c68 \
            96c4cb07b2a52124021c807f2c1ad4ab1f1cbf9c; do
            echo "Applying patch $patch..."
            git fetch https://gitlab.freedesktop.org/Pipetto-crypto/mesa.git $patch || true
            git cherry-pick $patch || (git cherry-pick --abort || echo "Skipping patch $patch")
          done

      - name: Build Mesa Turnip Driver
        run: |
          cd mesa
          meson setup build/ \
            --prefix=/usr \
            -Dvulkan-drivers=freedreno \
            -Dgallium-drivers=freedreno,softpipe,llvmpipe \
            -Dllvm=enabled \
            -Dshared-llvm=true \
            -Dplatforms=x11,wayland \
            -Dbuildtype=release
          ninja -C build -j$(nproc)
          mkdir -p ../artifacts
          find build -name "*.so" -type f -exec cp {} ../artifacts/ \; || true

      - name: Verify Architecture and Symbols
        run: |
          cd artifacts
          echo "Verifying output files..."
          for f in *.so; do
            echo "Checking $f"
            file "$f" || true
            readelf -h "$f" | grep "Machine" || true
            nm -D "$f" | grep -E "vkGetInstanceProcAddr|vkCreateInstance" || true
          done

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: TurnipDriver-${{ github.event.inputs.mesa_version }}
          path: artifacts/
